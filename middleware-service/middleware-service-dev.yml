spring:
  application:
    name: user-service-lib
  r2dbc:
    url: r2dbc:postgresql://${DB_HOST}?user_service?serverTimezone=UTC&useLegacyDatetimeCode=false
    name: user_service
    username: "{cipher}956bf7ce65e62326d2d1b9ad72f9cd1cc096159aafd25e88957d7c43711058f6"
    password: "{cipher}94433f0966a6cd4aea5407ef962e1d2231c6154ea4405c273ef82ee728b43817"
  devtools:
    restart.enabled: true
  pool:
    enabled: true

  cloud:
    function:
      definition: mailing; setting
    stream:
      bindings:
        mailing-out-0:
          destination: mailing-send
        userIndustry-out-0:
          destination: userIndustry
        setting-in-0:
          destination: notice-setting
        payment-in-0:
          destination: update-payment
        payment-out-0:
           destination: update-payment
  rabbitmq:
    host: ${BROKER_HOST}
    port: 5672
    username: guest

email:
  activation:
    template: d-3eca4131b71949989a5d9ee7b1993511
  password-reset:
    template: d-1a0862c51bcd47dbabae68a3fa380967

meld:
  scheduler:
    token:
      cleanup: '0 0 */3 * * ?'
    otp:
      cleanup: '0 0 * * * ?'

oauth2:
  client:
    id: "{cipher}d3242bdde7c9024fb963ec6e9b644d0bd9b0d613bd8ace1007e87e9a0e888512a54b9c2c0d9c96fa06bb2a58ba1abe6fee7f5dcf95afd3da54bd13c3df6c5415"
    secret:  "{cipher}0a737da608e28c5291b75c297c8bba13676c9059b2537883ca5180809abc2dd9"

  authorize:
    url: ${ISSUER_HOST}/oauth2/authorize
    scope: ${SCOPE}
    challengeMethod: S256

  authorization:
    url: ${ISSUER_HOST}/oauth2/token
    grant_type: authorization_code
    redirect_uri: ${REDIRECT_URL}

  logout:
    url: ${ISSUER_HOST}/logout

cloudinary:
  cloud-name: "{cipher}8983718db7b86f9c705103f0e1e7ff52cb260de1269cfddfe3d6e6483816c292"
  api-key: "{cipher}d040cb0b61a270e1d00be3e6cfbaba94037c92d4c278030ce8bf41b8e70d3fd3"
  api-secret: "{cipher}e66d5a1b4e5de8d26ed5d1fb170d0c221adc162735363560ff136fb37c7e9a60120ba45aff9f0ecc6c7d8cd75c270f00"

verification:
   company:
      url: https://api.qoreid.com/v1/ng/identities/cac-basic
   agent:
      url: https://api.qoreid.com/v1/ng/identities/nin/
   clientId: "{cipher}61c44c95eb6be96f5801d153711109ffa97d50406b941998dbe87e5fbdcec991d30d79687291fe92e00d838f85d31b8f"
   secret: "{cipher}4c309408a1557ae0115c6e4878d373e3cd4e2eb9b9bbe9f32cc790aad19e1f2486f0d31518e1657d8613b9bd0416ae5f732019e41f43b30059363bb4d758f8f6"
   auth:
     url: https://api.qoreid.com/token

payment:
   remita:
      url: https://demo.remita.net/remita/exapp/api/v1/send/api/echannelsvc/merchant/api/paymentinit
      status: 
         url: https://demo.remita.net/remita/exapp/api/v1/send/api/echannelsvc
      merchantId: "{cipher}71e3dfdf4abc45f4e7237c959ef24ce4e2344f493d99d0d836a68e7a6a487f5f"
      apiKey: "{cipher}b197d8f2e33dbd6bfa3e527212f76e505ad6fcb3170e903bde1c1ba1c53786ec"
      serviceTypeId: "{cipher}c1604a871e49e17bec05b8c46251b711bb439a042bffec578d7fc0a40cdd7c8b"

logging:
  level:
    root: ${ROOT_LOG_LEVEL}

